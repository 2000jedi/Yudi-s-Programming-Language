union Optional <T> {
    class None {}
    class Some {
        var val : T;
    }
}

class Temp <T> {
    var v : T;
    function new(v : T) {
        this.v = v;
    }
}

class Bag {
    var ival : int32;
    var fval : fp32;

    function new(a : int32, b : fp32){
        this.ival = a;
        this.fval = b;
    }

    function add() {
        this.ival = this.ival + 1;
        this.fval = this.fval + 1.0;
    }
}

function main() {
    var bag_opt : Optional<Bag> = Optional.Some(Bag(0, 0));
    match (bag_opt) {
        None {}
        Some(b) {
            print(b.ival, b.fval);
        }
    }
    var bag : Bag = Bag(1, 2.0);
    var bag2 : Bag = bag;
    bag.add();
    print(bag2.ival, bag2.fval);
}

